---
- name: "8. CISCO XRV9K SR WITH TI-LFA LAB PLAYBOOK - MICROLOOP AVOIDANCE"
  hosts: P2, P7, P8
  gather_facts: false
  vars:
    mins: 1
    slow_secs: 1
    secs: 15
    templates:
    - microloop_avoidance_{{ inventory_hostname | lower }}.j2
    - microloop_avoidance_{{ inventory_hostname | lower }}_enable.j2
    - microloop_avoidance_{{ inventory_hostname | lower }}_trigger.j2
    - microloop_avoidance_{{ inventory_hostname | lower }}_restore.j2
    command_set_1:
    - show isis fast-reroute 5.5.5.5/32 detail
    - show route 5.5.5.5/32
    - show cef 5.5.5.5/32
    command_set_2:
    - show isis protocol | utility egrep -A2 Micro
    - show isis fast-reroute 5.5.5.5/32 detail
    - show route 5.5.5.5/32
    - show route 5.5.5.5/32 detail
    - show cef 5.5.5.5/32
  tasks:
  - name: 8.0 RENDER AND DISPLAY THE PREPARATION CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[0] }}"
      - "{{ lookup('template', templates[0]).split('\n') }}"
    when: inventory_hostname == "P2" or hostname == "P8"

  - name: 8.1 RENDER AND SAVE THE PREPARATION CONFIGURATION
    template:
      src: "{{ templates[0] }}"
      dest: "xrcfg/{{ hostname }}.mlaprep.xrcfg"
    register: output
    when: inventory_hostname == "P2" or hostname == "P8"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 8.2 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P2" or hostname == "P8"

  - name: 8.3 RENDER AND APPLY THE PREPARATION CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[0] }}"
      match: none
    when: inventory_hostname == "P2" or hostname == "P8"

  - name: "{{ mins }} minutes PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      minutes: "{{ mins }}"

  - name: 8.4 RUN COMMANDS TO CHECK PATH to PE5 IS VIA P3
    cisco.iosxr.iosxr_command:
      commands:
      - "{{ item }}"
    loop: "{{ command_set_1 }}"
    when: hostname == "P2"
    register: output

  - name: 8.5 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      msg:
      - "{{ output.results[idx].stdout_lines }}"
    loop: "{{ command_set_1 }}"
    loop_control:
      index_var: idx
    when: hostname == "P2"

  - name: 8.6 RENDER AND DISPLAY THE MICROLOOP AVOIDANCE CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[1] }}"
      - "{{ lookup('template', templates[1]).split('\n') }}"
    when: inventory_hostname == "P2"

  - name: 8.7 RENDER AND SAVE THE MICROLOOP AVOIDANCE CONFIGURATION
    template:
      src: "{{ templates[1] }}"
      dest: "xrcfg/{{ hostname }}.mla.xrcfg"
    register: output
    when: inventory_hostname == "P2"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 8.8 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P2"

  - name: 8.9 RENDER AND APPLY THE MICROLOOP AVOIDANCE CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[1] }}"
      match: none
    when: inventory_hostname == "P2"

  - name: "{{ mins }} minutes PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      minutes: "{{ mins }}"

  - name: 8.10 RENDER AND DISPLAY THE MICROLOOP TRIGGER CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[2] }}"
      - "{{ lookup('template', templates[2]).split('\n') }}"
    when: inventory_hostname == "P8"

  - name: 8.11 RENDER AND SAVE THE MICROLOOP TRIGGER CONFIGURATION
    template:
      src: "{{ templates[2] }}"
      dest: "xrcfg/{{ hostname }}.mlatrgr.xrcfg"
    register: output
    when: inventory_hostname == "P8"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 8.12 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P8"

  - name: 8.13 RENDER AND APPLY THE MICROLOOP TRIGGER CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[2] }}"
      match: none
    when: inventory_hostname == "P8"

  - name: "{{ secs }} seconds PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ secs }}"

  - name: 8.14 RUN COMMANDS TO VERIFY MICROLOOP AVOIDANCE
    cisco.iosxr.iosxr_command:
      commands:
      - "{{ item }}"
    loop: "{{ command_set_2 }}"
    when: hostname == "P2"
    register: output

  - name: 8.15 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      msg:
      - "{{ output.results[idx].stdout_lines }}"
    loop: "{{ command_set_2 }}"
    loop_control:
      index_var: idx
    when: hostname == "P2"

  - name: 8.16 RENDER AND DISPLAY THE RESTORATION CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[3] }}"
      - "{{ lookup('template', templates[3]).split('\n') }}"
    when: inventory_hostname == "P2" or hostname == "P7"

  - name: 8.17 RENDER AND SAVE THE RESTORATION CONFIGURATION
    template:
      src: "{{ templates[3] }}"
      dest: "xrcfg/{{ hostname }}.mlarestore.xrcfg"
    register: output
    when: inventory_hostname == "P2" or hostname == "P7"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 8.18 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P2" or hostname == "P7"

  - name: 8.19 RENDER AND APPLY THE RESTORATION CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[3] }}"
      match: none
    when: inventory_hostname == "P2" or hostname == "P7"
