---
- name: "5. CISCO XRV9K SR WITH TI-LFA LAB PLAYBOOK - ZERO SEGMENT TI-LFA"
  hosts: zstilfa
  gather_facts: false
  vars:
    mins: 1
    slow_secs: 1
    templates:
    - zs_tilfa_{{ inventory_hostname | lower }}.j2
    - zs_tilfa_revert_{{ inventory_hostname | lower }}.j2
    command_set_1:
    - show isis route 5.5.5.5/32 detail
    - show isis fast-reroute 5.5.5.5/32 detail
    - show route 5.5.5.5/32
    - show cef 5.5.5.5/32
  tasks:
  - name: 5.0 RENDER AND DISPLAY THE ZERO SEGMENT TI-LFA CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[0] }}"
      - "{{ lookup('template', templates[0]).split('\n') }}"

  - name: 5.1 RENDER AND SAVE THE ZERO SEGMENT TI-LFA CONFIGURATION
    template:
      src: "{{ templates[0] }}"
      dest: "xrcfg/{{ hostname }}.zs_tilfa.xrcfg"
    register: output

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 5.2 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest

  - name: 5.3 RENDER AND APPLY THE ZERO SEGMENT TI-LFA CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[0] }}"
      match: none

  - name: "{{ mins }} minutes PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      minutes: "{{ mins }}"

  - name: 5.4 RUN COMMANDS TO VERIFY ZERO SEGMENT TI-LFA SCENARIO
    cisco.iosxr.iosxr_command:
      commands:
      - "{{ item }}"
    loop: "{{ command_set_1 }}"
    when: hostname == "P2"
    register: output

  - name: 5.5 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      msg:
      - "{{ output.results[idx].stdout_lines }}"
    loop: "{{ command_set_1 }}"
    loop_control:
      index_var: idx
    when: hostname == "P2"

  - name: 5.6 RENDER AND DISPLAY THE ZERO SEGMENT TI-LFA REVERSAL CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[1] }}"
      - "{{ lookup('template', templates[1]).split('\n') }}"

  - name: 5.7 RENDER AND SAVE THE ZERO SEGMENT TI-LFA REVARSAL CONFIGURATION
    template:
      src: "{{ templates[1] }}"
      dest: "xrcfg/{{ hostname }}.zs_tilfa_revert.xrcfg"
    register: output

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 5.8 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest

  - name: 5.9 RENDER AND REVERT ZERO SEGMENT TI-LFA SCENARIO CHANGES
    cisco.iosxr.iosxr_config:
      src: "{{ templates[1] }}"
      match: none
