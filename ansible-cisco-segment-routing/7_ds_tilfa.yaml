---
- name: "7. CISCO XRV9K SR WITH TI-LFA LAB PLAYBOOK - DOUBLE SEGMENT TI-LFA"
  hosts: P2, P4, P8
  gather_facts: false
  vars:
    mins: 1
    slow_secs: 1
    templates:
    - ds_tilfa.j2
    - ds_tilfa_revert.j2
    command_set_1:
    - traceroute sr-mpls 5.5.5.5/32
    - show isis adjacency Gi0/0/0/1 detail
    command_set_2:
    - show isis fast-reroute 5.5.5.5/32 detail
    - show cef 5.5.5.5/32
  tasks:
  - name: 7.0 RENDER AND DISPLAY THE DOUBLE SEGMENT TI-LFA CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[0] }}"
      - "{{ lookup('template', templates[0]).split('\n') }}"
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: 7.1 RENDER AND SAVE THE DOUBLE SEGMENT TI-LFA CONFIGURATION
    template:
      src: "{{ templates[0] }}"
      dest: "xrcfg/{{ hostname }}.ds_tilfa.xrcfg"
    register: output
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 7.2 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: 7.3 RENDER AND APPLY THE DOUBLE SEGMENT TI-LFA CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[0] }}"
      match: none
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: "{{ mins }} minutes PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      minutes: "{{ mins }}"

  - name: 7.4 RUN COMMANDS TO VERIFY DOUBLE SEGMENT TI-LFA SCENARIO...(A)
    cisco.iosxr.iosxr_command:
      commands:
      - "{{ item }}"
    loop: "{{ command_set_1 }}"
    when: inventory_hostname == "P8"
    register: output

  - name: 7.5 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      msg:
      - "{{ output.results[idx].stdout_lines }}"
    loop: "{{ command_set_1 }}"
    loop_control:
      index_var: idx
    when: inventory_hostname == "P8"

  - name: 7.6 RUN COMMANDS TO VERIFY DOUBLE SEGMENT TI-LFA SCENARIO...(B)
    cisco.iosxr.iosxr_command:
      commands:
      - "{{ item }}"
    loop: "{{ command_set_2 }}"
    when: inventory_hostname == "P2"
    register: output

  - name: 7.7 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      msg:
      - "{{ output.results[idx].stdout_lines }}"
    loop: "{{ command_set_2 }}"
    loop_control:
      index_var: idx
    when: inventory_hostname == "P2"

  - name: 7.8 RENDER AND DISPLAY DOUBLE SEGMENT TI-LFA REVERSAL CONFIGURATION
    debug:
      msg:
      - "template: {{ templates[1] }}"
      - "{{ lookup('template', templates[1]).split('\n') }}"
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: 7.9 RENDER AND SAVE THE DOUBLE SEGMENT TI-LFA REVERSAL CONFIGURATION
    template:
      src: "{{ templates[1] }}"
      dest: "xrcfg/{{ hostname }}.ds_tilfa_revert.xrcfg"
    register: output
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: "{{ slow_secs }} secs PAUSE FOR CONVERGENCE"
    ansible.builtin.pause:
      seconds: "{{ slow_secs }}"

  - name: 7.10 DISPLAY THE OUTPUT REGISTERED IN THE PREVIOUS TASK
    debug:
      var: output.dest
    when: inventory_hostname == "P4" or hostname == "P8"

  - name: 7.11 RENDER AND APPLY THE DOUBLE SEGMENT TI-LFA REVERSAL CONFIGURATION
    cisco.iosxr.iosxr_config:
      src: "{{ templates[1] }}"
      match: none
    when: inventory_hostname == "P4" or hostname == "P8"
